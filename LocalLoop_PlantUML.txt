@startuml
class User  {
    - role : String
    - email : String
    - lastName : String
    - firstName : String
    - password : String
    - username : String
    - isActive : boolean
    + User(String firstName, String lastName, String username, String email, String password, String role)
    + getUsername() : String
    + getFirstName() : String
    + getLastName() : String
    + getPassword() : String
    + getEmail() : String
    + getRole() : String
    + deActivate() : boolean
}
class Admin {
    - {static} admin : Admin
    + Admin(String firstName, String lastName, String username, String email, String password)
    + getAdmin() : {static} Admin
}

class Participant  {
    + Participant(String firstName, String lastName, String username, String email, String password)
}

class Organizer  {
    + Organizer(String firstName, String lastName, String username, String email, String password)
}

class Category {
    - ID : int {final}
    - NAME : String {final}
    - DESCRIPTION : String {final}
    + Category(int id, String name, String description)
    + getId() : int
    + getName() : String
    + getDescription() : String
}

class Event {
    - id : int
    - title : String {final}
    - description : String {final}
    - categoryId : int {final}
    - organizer : String {final}
    - fee : double {final}
    - dateTime : String {final}
    + Event(int id, String title, String description, int categoryId, String organizer, double fee, String dateTime)
    + getId() : int
    + setId(int id) : void
    + getTitle() : String
    + getDescription() : String
    + setDescription(String d) : void
    + getCategoryId() : int
    + getOrganizer() : String
    + setOrganizer(String o) : void
    + getFee(): double
    + getDateTime() : String
}

User <|-- Admin
User <|-- Participant
User <|-- Organizer
Admin "1" ..>"*" Category : <<creates>>
Category "1"*.."*" Event : <<Needs to Exist>>
Organizer "1" -->"0...*" Event <<creates>>
Admin --> Organizer : <<Manages>>
Admin --> Participant : <<Manages>>
@enduml