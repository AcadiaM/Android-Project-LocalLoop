Index: app/src/main/java/com/example/local_loop/ui/login/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.local_loop.ui.login;\r\n\r\nimport android.app.Activity;\r\n\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.StringRes;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.local_loop.R;\r\nimport com.example.local_loop.database.DatabaseHelper;\r\nimport com.example.local_loop.ui.login.LoginViewModel;\r\nimport com.example.local_loop.ui.login.LoginViewModelFactory;\r\nimport com.example.local_loop.databinding.ActivityLoginBinding;\r\nimport com.example.local_loop.userClasses.WelcomePage;\r\nimport android.content.Intent;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private LoginViewModel loginViewModel;\r\n    private ActivityLoginBinding binding;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        binding = ActivityLoginBinding.inflate(getLayoutInflater());\r\n        setContentView(binding.getRoot());\r\n\r\n        loginViewModel = new ViewModelProvider(this, new LoginViewModelFactory(this))\r\n                .get(LoginViewModel.class);\r\n\r\n        final EditText usernameEditText = binding.username;\r\n        final EditText passwordEditText = binding.password;\r\n        final Button loginButton = binding.login;\r\n        final ProgressBar loadingProgressBar = binding.loading;\r\n\r\n        loginViewModel.getLoginFormState().observe(this, new Observer<LoginFormState>() {\r\n            @Override\r\n            public void onChanged(@Nullable LoginFormState loginFormState) {\r\n                if (loginFormState == null) {\r\n                    return;\r\n                }\r\n                loginButton.setEnabled(loginFormState.isDataValid());\r\n                if (loginFormState.getUsernameError() != null) {\r\n                    usernameEditText.setError(getString(loginFormState.getUsernameError()));\r\n                }\r\n                if (loginFormState.getPasswordError() != null) {\r\n                    passwordEditText.setError(getString(loginFormState.getPasswordError()));\r\n                }\r\n            }\r\n        });\r\n\r\n        loginViewModel.getLoginResult().observe(this, new Observer<LoginResult>() {\r\n            @Override\r\n            public void onChanged(@Nullable LoginResult loginResult) {\r\n                if (loginResult == null) {\r\n                    return;\r\n                }\r\n                loadingProgressBar.setVisibility(View.GONE);\r\n                if (loginResult.getError() != null) {\r\n                    showLoginFailed(loginResult.getError());\r\n                }\r\n                if (loginResult.getSuccess() != null) {\r\n                    updateUiWithUser(loginResult.getSuccess());\r\n                }\r\n                setResult(Activity.RESULT_OK);\r\n\r\n                //Complete and destroy login activity once successful\r\n                finish();\r\n            }\r\n        });\r\n\r\n        TextWatcher afterTextChangedListener = new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n                // ignore\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                // ignore\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                loginViewModel.loginDataChanged(usernameEditText.getText().toString(),\r\n                        passwordEditText.getText().toString());\r\n            }\r\n        };\r\n        usernameEditText.addTextChangedListener(afterTextChangedListener);\r\n        passwordEditText.addTextChangedListener(afterTextChangedListener);\r\n        passwordEditText.setOnEditorActionListener(new TextView.OnEditorActionListener() {\r\n\r\n            @Override\r\n            public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {\r\n                if (actionId == EditorInfo.IME_ACTION_DONE) {\r\n                    loginViewModel.login(usernameEditText.getText().toString(),\r\n                            passwordEditText.getText().toString());\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        loginButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                loadingProgressBar.setVisibility(View.VISIBLE);\r\n                loginViewModel.login(usernameEditText.getText().toString(),\r\n                        passwordEditText.getText().toString());\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateUiWithUser(LoggedInUserView loggedInUser) {\r\n        DatabaseHelper db = new DatabaseHelper(this);\r\n        Intent intent = new Intent(getApplicationContext(), WelcomePage.class);\r\n        intent.putExtra(\"username\", loggedInUser.getDisplayName());// Pass the username to the WelcomePage\r\n        intent.putExtra(\"userType\", db.getRoleByUsername(loggedInUser.getDisplayName())); // Pass the userType to the WelcomePage\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void showLoginFailed(@StringRes Integer errorString) {\r\n        Toast.makeText(getApplicationContext(), errorString, Toast.LENGTH_SHORT).show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/local_loop/ui/login/LoginActivity.java b/app/src/main/java/com/example/local_loop/ui/login/LoginActivity.java
--- a/app/src/main/java/com/example/local_loop/ui/login/LoginActivity.java	(revision 00d5f530415d02ac58d86dac9b1820b6bcdc1904)
+++ b/app/src/main/java/com/example/local_loop/ui/login/LoginActivity.java	(date 1749701376906)
@@ -27,6 +27,7 @@
 import com.example.local_loop.ui.login.LoginViewModel;
 import com.example.local_loop.ui.login.LoginViewModelFactory;
 import com.example.local_loop.databinding.ActivityLoginBinding;
+import com.example.local_loop.userClasses.CategoryActivity;
 import com.example.local_loop.userClasses.WelcomePage;
 import android.content.Intent;
 
@@ -129,6 +130,8 @@
 
     private void updateUiWithUser(LoggedInUserView loggedInUser) {
         DatabaseHelper db = new DatabaseHelper(this);
+        String username = loggedInUser.getDisplayName();
+        String userType = db.getRoleByUsername(username);
         Intent intent = new Intent(getApplicationContext(), WelcomePage.class);
         intent.putExtra("username", loggedInUser.getDisplayName());// Pass the username to the WelcomePage
         intent.putExtra("userType", db.getRoleByUsername(loggedInUser.getDisplayName())); // Pass the userType to the WelcomePage
